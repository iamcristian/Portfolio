---
import Layout from "@/layouts/Layout.astro";
import { getCollection, render } from "astro:content";
import Prose from "@/components/Prose.astro";
import Head from "@/components/Head.astro";
import RelatedPosts from "@/components/blog/RelatedPosts.astro";
import TableofContents from "@/components/blog/TableofContents.astro";
import { getLangFromUrl, useTranslations } from "@/i18n/utils";

export async function getStaticPaths() {
  const pages = await getCollection("blog");

  const paths = pages.map((page) => {
    const [lang, ...slug] = page.id.split("/");
    return { params: { lang, slug: slug.join("/") || undefined }, props: page };
  });

  return paths;
}

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const contentBreadcrumbs = t("breadcrumbs");
const contentBlog = t("blog");

const page = Astro.props;
const { Content, headings } = await render(page);
const formattedDate = page.data.publishDate.toLocaleDateString(lang);

// Get all posts to find related ones
const allPosts = await getCollection("blog");

// Get related posts by matching tags, exclude current slug
const relatedPosts = allPosts
  .filter((post) => post.data.language === lang)
  .filter((post) => post.id !== page.id)
  .filter((post) =>
    post.data.tags?.some((tag) => page.data.tags?.includes(tag))
  )
  .slice(0, 3);

const metaTags = {
  title: page.data.title,
  description: page.data.excerpt,
  image: page.data.image.src,
  imageAlt: page.data.image.alt,
};
---

<Layout type="blogPost" blogPost={metaTags}>
  <Head lang={lang} blogPost={page.data} />

  <div class="container pt-24 mx-auto">
    <!-- Breadcrumbs -->
    <nav class="flex items-center space-x-2 text-sm">
      <a href={`/${lang}`}>{contentBreadcrumbs.home}</a>
      <svg class="w-4 h-4"><use href="#icon-chevron-right"></use></svg>
      <a href={`/${lang}/blog`} class="">{contentBreadcrumbs.blog}</a>
      <svg class="w-4 h-4"><use href="#icon-chevron-right"></use></svg>
      <span>{page.data.title}</span>
    </nav>

    <div class="grid grid-cols-1 lg:grid-cols-4 gap-16">
      <!-- Main content -->
      <div class="lg:col-span-3 space-y-4">

        <!-- Post Title -->
        <h1 class="text-2xl md:text-4xl font-bold tracking-tighter pt-3">
          {page.data.title}
        </h1>

        <!-- Post Tags -->
        <div class="flex flex-wrap gap-2">
          {page.data.tags?.map((tag) => <kbd class="kbd">{tag}</kbd>)}
        </div>

        <!-- Post Data -->
        <div class="flex items-center space-x-6">
          <div class="flex items-center space-x-2 text-sm">
            <svg class="w-4 h-4 inline-block">
              <use href="#icon-calendar"></use>
            </svg>
            <span>
              {
                new Date(formattedDate).toLocaleDateString(lang, {
                  year: "numeric",
                  month: "long",
                  day: "numeric",
                })
              }
            </span>
          </div>
          <div class="flex items-center space-x-2 text-sm">
            <svg class="w-4 h-4 inline-block">
              <use href="#icon-clock"></use>
            </svg>
            <span>{page.data.readTime}</span>
          </div>
        </div>

        <!-- Post Image -->
        {
          page.data.image.src && (
            <img
              src={page.data.image.src}
              alt={page.data.image.alt}
              class="rounded-2xl aspect-video object-cover mb-12 w-1/2 mx-auto"
            />
          )
        }

        <!-- Content -->
        <article>
          <Prose>
            <Content />
          </Prose>
        </article>
      </div>

      <!-- Sidebar -->
      <aside class="lg:col-span-1">
        <div class="sticky top-32 space-y-8">
          <!-- Table of Contents -->
          <TableofContents
            headings={headings}
            tableOfContentText={contentBlog.tableOfContents}
          />

          <!-- Author Info -->
          <div class="rounded-xl p-6 border">
            <div class="flex items-center space-x-2 mb-4">
              <svg class="w-5 h-5">
                <use href="#icon-user"></use>
              </svg>
              <h2 class="font-bold">{contentBlog.author}</h2>
            </div>
            <p class="text-sm">{page.data.author}</p>
          </div>
        </div>
      </aside>
    </div>
  </div>
  <!-- Related Posts -->
  {relatedPosts.length > 0 && <RelatedPosts posts={relatedPosts} />}
</Layout>
